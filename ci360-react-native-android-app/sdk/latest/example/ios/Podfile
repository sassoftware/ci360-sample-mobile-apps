# require_relative '../node_modules/react-native/scripts/react_native_pods'
# require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

ENV['RCT_NEW_ARCH_ENABLED'] = '1'

require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!
setup_permissions([
  # 'AppTrackingTransparency',
  # 'Bluetooth',
  # 'Calendars',
  # 'CalendarsWriteOnly',
  # 'Camera',
  # 'Contacts',
  # 'FaceID',
  # 'LocationAccuracy',
  'LocationAlways',
  # 'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
  # 'Notifications',
  # 'PhotoLibrary',
  # 'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end
# install! 'cocoapods', :deterministic_uuids => false

# ENV['RCT_NEW_ARCH_ENABLED'] = '0'

target 'MobileSdkReactNativeExample' do
  config = use_native_modules!

  # Flags change depending on the env values.
  # flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    # :hermes_enabled => false,
    # # :hermes_enabled => flags[:hermes_enabled],
    # :fabric_enabled => flags[:fabric_enabled],

    # :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!({'Flipper' => '0.125.0', 'Flipper-Folly' => '2.6.10'})

  # permissions_path = '../../node_modules/react-native-permissions/ios'
  # pod 'Permission-LocationAccuracy',
  # :path => "#{permissions_path}/LocationAccuracy"
  # pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways"
  # pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"
  # pod 'RCT-Folly', :podspec => '../node_modules/react-native/third-party-podspecs/RCT-Folly.podspec', :modular_headers => true, :version => '2021.06.28.00-v2'
  pod 'react-native-webview', :path => '../node_modules/react-native-webview'

  pre_install do |installer|
    system("cd ../../ && npx bob build --target codegen")
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false)

    # installer.pods_project.targets.each do |target|
    #   target.build_configurations.each do |config|
    #     config.build_settings['SWIFT_VERSION'] = '5.0'
    #     config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
    #   end
    # end

    # __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end


