
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJavaSpec.js
 *
 * @nolint
 */

package com.mobilesdkreactnative;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.bridge.Callback;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.turbomodule.core.interfaces.TurboModule;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

public abstract class NativeMobileSdkReactNativeSpec extends ReactContextBaseJavaModule implements TurboModule {
  public static final String NAME = "MobileSdkReactNative";

  public NativeMobileSdkReactNativeSpec(ReactApplicationContext reactContext) {
    super(reactContext);
  }

  @Override
  public @Nonnull String getName() {
    return NAME;
  }

  @ReactMethod(isBlockingSynchronousMethod = true)
  @DoNotStrip
  public abstract double multiply(double a, double b);

  @ReactMethod
  @DoNotStrip
  public abstract void setAppVersionAndInitSDK(String appVersion);

  @ReactMethod
  @DoNotStrip
  public abstract void newPage(String uri);

  @ReactMethod
  @DoNotStrip
  public abstract void addAppEvent(String eventKey, @Nullable ReadableMap data);

  @ReactMethod
  @DoNotStrip
  public abstract void identity(String value, String type, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void detachIdentity(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void startMonitoringLocation();

  @ReactMethod
  @DoNotStrip
  public abstract void disableLocationMonitoring();

  @ReactMethod
  @DoNotStrip
  public abstract void getTenantID(Callback callback);

  @ReactMethod
  @DoNotStrip
  public abstract void getDeviceID(Callback callback);

  @ReactMethod
  @DoNotStrip
  public abstract void getTagServer(Callback callback);

  @ReactMethod
  @DoNotStrip
  public abstract void getApplicationVersion(Callback callback);

  @ReactMethod
  @DoNotStrip
  public abstract void setApplicationVersion(String version);

  @ReactMethod
  @DoNotStrip
  public abstract void registerForMobileMessage(String token);

  @ReactMethod
  @DoNotStrip
  public abstract void handleMobileMessage(ReadableMap data, Callback callback);

  @ReactMethod
  @DoNotStrip
  public abstract void loadSpotData(String spotId, @Nullable ReadableMap attributes, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void registerSpotViewable(String spotId);

  @ReactMethod
  @DoNotStrip
  public abstract void registerSpotClicked(String spotId);
}
