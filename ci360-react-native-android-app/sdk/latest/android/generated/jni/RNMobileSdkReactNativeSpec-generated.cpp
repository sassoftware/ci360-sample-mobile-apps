
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJniCpp.js
 */

#include "RNMobileSdkReactNativeSpec.h"

namespace facebook::react {

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_multiply(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, NumberKind, "multiply", "(DD)D", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_setAppVersionAndInitSDK(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "setAppVersionAndInitSDK", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_newPage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "newPage", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_addAppEvent(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "addAppEvent", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_identity(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "identity", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_detachIdentity(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "detachIdentity", "(Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_startMonitoringLocation(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "startMonitoringLocation", "()V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_disableLocationMonitoring(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "disableLocationMonitoring", "()V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_getTenantID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "getTenantID", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_getDeviceID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "getDeviceID", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_getTagServer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "getTagServer", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_getApplicationVersion(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "getApplicationVersion", "(Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_setApplicationVersion(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "setApplicationVersion", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_registerForMobileMessage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "registerForMobileMessage", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_handleMobileMessage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "handleMobileMessage", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_loadSpotData(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, PromiseKind, "loadSpotData", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_registerSpotViewable(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "registerSpotViewable", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

static facebook::jsi::Value __hostFunction_NativeMobileSdkReactNativeSpecJSI_registerSpotClicked(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
  static jmethodID cachedMethodId = nullptr;
  return static_cast<JavaTurboModule &>(turboModule).invokeJavaMethod(rt, VoidKind, "registerSpotClicked", "(Ljava/lang/String;)V", args, count, cachedMethodId);
}

NativeMobileSdkReactNativeSpecJSI::NativeMobileSdkReactNativeSpecJSI(const JavaTurboModule::InitParams &params)
  : JavaTurboModule(params) {
  methodMap_["multiply"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeSpecJSI_multiply};
  methodMap_["setAppVersionAndInitSDK"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_setAppVersionAndInitSDK};
  methodMap_["newPage"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_newPage};
  methodMap_["addAppEvent"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeSpecJSI_addAppEvent};
  methodMap_["identity"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeSpecJSI_identity};
  methodMap_["detachIdentity"] = MethodMetadata {0, __hostFunction_NativeMobileSdkReactNativeSpecJSI_detachIdentity};
  methodMap_["startMonitoringLocation"] = MethodMetadata {0, __hostFunction_NativeMobileSdkReactNativeSpecJSI_startMonitoringLocation};
  methodMap_["disableLocationMonitoring"] = MethodMetadata {0, __hostFunction_NativeMobileSdkReactNativeSpecJSI_disableLocationMonitoring};
  methodMap_["getTenantID"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_getTenantID};
  methodMap_["getDeviceID"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_getDeviceID};
  methodMap_["getTagServer"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_getTagServer};
  methodMap_["getApplicationVersion"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_getApplicationVersion};
  methodMap_["setApplicationVersion"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_setApplicationVersion};
  methodMap_["registerForMobileMessage"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_registerForMobileMessage};
  methodMap_["handleMobileMessage"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeSpecJSI_handleMobileMessage};
  methodMap_["loadSpotData"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeSpecJSI_loadSpotData};
  methodMap_["registerSpotViewable"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_registerSpotViewable};
  methodMap_["registerSpotClicked"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeSpecJSI_registerSpotClicked};
}

std::shared_ptr<TurboModule> RNMobileSdkReactNativeSpec_ModuleProvider(const std::string &moduleName, const JavaTurboModule::InitParams &params) {
  if (moduleName == "MobileSdkReactNative") {
    return std::make_shared<NativeMobileSdkReactNativeSpecJSI>(params);
  }
  return nullptr;
}

} // namespace facebook::react
