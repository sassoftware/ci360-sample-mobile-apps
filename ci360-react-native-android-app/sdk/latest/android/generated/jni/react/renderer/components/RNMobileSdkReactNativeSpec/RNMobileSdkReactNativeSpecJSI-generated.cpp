/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "RNMobileSdkReactNativeSpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_multiply(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->multiply(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asNumber(),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber()
  );
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_setAppVersionAndInitSDK(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->setAppVersionAndInitSDK(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_newPage(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->newPage(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_addAppEvent(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->addAppEvent(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 || args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_identity(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->identity(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asString(rt)
  );
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_detachIdentity(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->detachIdentity(
    rt
  );
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_startMonitoringLocation(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->startMonitoringLocation(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_disableLocationMonitoring(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->disableLocationMonitoring(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_getTenantID(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->getTenantID(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_getDeviceID(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->getDeviceID(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_getTagServer(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->getTagServer(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_getApplicationVersion(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->getApplicationVersion(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt).asFunction(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_setApplicationVersion(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->setApplicationVersion(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_registerForMobileMessage(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->registerForMobileMessage(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_handleMobileMessage(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->handleMobileMessage(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt).asFunction(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_loadSpotData(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->loadSpotData(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt),
    count <= 1 || args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
  );
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_registerSpotViewable(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->registerSpotViewable(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_registerSpotClicked(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeMobileSdkReactNativeCxxSpecJSI *>(&turboModule)->registerSpotClicked(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asString(rt)
  );
  return jsi::Value::undefined();
}

NativeMobileSdkReactNativeCxxSpecJSI::NativeMobileSdkReactNativeCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("MobileSdkReactNative", jsInvoker) {
  methodMap_["multiply"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_multiply};
  methodMap_["setAppVersionAndInitSDK"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_setAppVersionAndInitSDK};
  methodMap_["newPage"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_newPage};
  methodMap_["addAppEvent"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_addAppEvent};
  methodMap_["identity"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_identity};
  methodMap_["detachIdentity"] = MethodMetadata {0, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_detachIdentity};
  methodMap_["startMonitoringLocation"] = MethodMetadata {0, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_startMonitoringLocation};
  methodMap_["disableLocationMonitoring"] = MethodMetadata {0, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_disableLocationMonitoring};
  methodMap_["getTenantID"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_getTenantID};
  methodMap_["getDeviceID"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_getDeviceID};
  methodMap_["getTagServer"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_getTagServer};
  methodMap_["getApplicationVersion"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_getApplicationVersion};
  methodMap_["setApplicationVersion"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_setApplicationVersion};
  methodMap_["registerForMobileMessage"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_registerForMobileMessage};
  methodMap_["handleMobileMessage"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_handleMobileMessage};
  methodMap_["loadSpotData"] = MethodMetadata {2, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_loadSpotData};
  methodMap_["registerSpotViewable"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_registerSpotViewable};
  methodMap_["registerSpotClicked"] = MethodMetadata {1, __hostFunction_NativeMobileSdkReactNativeCxxSpecJSI_registerSpotClicked};
}


} // namespace facebook::react
